# Задание 1.
# Напишите функцию, которая принимает на вход строку (предложение), а возвращает самое длинное слово из строки.
def longest_word(text):
    pass

# Задание 2.
# Напишите функцию, которая принимает на вход строку и заменяет в ней все множественные пробелы на одинарные.
#       Например: 'Hello,    world' -> 'Hello, world'
def replace_multiple_spaces(text):
    pass

# Задание 3.
# Напишите функцию, которая принимает на вход строку и возвращает словарь,
# где ключи - это символы, а значения - количество этих символов в строке.
#       Например: 'Hello, world!' -> {'H': 1, 'e': 1, 'l': 3, 'o': 2, ',': 1, ' ': 1, 'w': 1, 'r': 1, 'd': 1, '!': 1}
#       Подсказка: используйте метод строки `count("a")`, который возвращает количество вхождений символа в строку.
def count_letters(text):
    pass

# Задание 4.
# Напишите функцию, которая принимает на вход строку и возвращает True,
# если строка является палиндромом, и False - в противном случае.
#       Палиндром - это строка, которая читается одинаково в обоих направлениях.
#       Например: 'мадам', 'А роза упала на лапу Азора'
def is_palindrome(text):
    pass


# Задание 5.
# Напишите функцию, которая принимает на вход строку и возвращает новую строку,
#       в которой все символы, которые не являются буквами, удалены (пробел разрешен).
#       Например: 'Hello, world!' -> 'Hello world'
#       Подсказка: используйте цикл и метод строки `isalpha()` для проверки, является ли символ буквой.
def remove_non_letters(text):
    pass


# Задание 6.
# Напишите функцию, которая принимает на вход строку и возвращает новую строку,
# в которой все гласные буквы заменены на символ '*'.
def replace_vowels(text):
    pass


# Задание 7.
# Напишите функцию, которая принимает на вход число и возвращает сумму его цифр.
def sum_digits(number):
    pass

# Задание 8.
# Напишите функцию, которая принимает на вход число и возвращает True,
# если число является степенью двойки, и False - в противном случае.
#       Например: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536 и т.д.
#       Подсказка: используйте цикл и оператор деления без остатка.
def is_power_of_two(number):
    pass


# Задание 9.
# Напишите функцию, которая принимает на вход три целых числа и возвращает True,
# если они могут быть длинами сторон треугольника.
#       Подсказка: сумма двух сторон треугольника должна быть больше третьей стороны.
def is_triangle(a, b, c):
    pass


# Задание 10.
# Напишите функцию, которая принимает на вход строку и возвращает новую строку, в которой все символы,
# которые встречаются более одного раза, заменены на символ '_'.
def replace_duplicates(text):
    pass
